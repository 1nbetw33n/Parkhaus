@startuml
skinparam classAttributeIconSize 0

package cd_bookInternationalConference {


    class memby {
    }


    interface BookingPageControllable {
        startSearchMask():boolean
    }

    class BookingPageController{
        #startSearchMask():boolean
    }


    interface ConferenceControllable {
        asHTML():boolean
    }

    interface SearchInternationalConferenceControllable {
        startSearchForX():boolean
    }

    abstract class ConferenceController {
        #asHTML():boolean
    }

    class SearchInternationalConferenceController {
        #startSearchForX():boolean
    }


    interface BookInternationalConferenceControllable {
        startBookingMask():boolean
        startBookingX():boolean
    }

    class BookInternationalConferenceController {
        #startBookingMask():boolean
        #startBookingX():boolean
    }


    interface DataBaseControllable {
        startSQLQuery():boolean
        returnSQLQueryResults():boolean
    }

    abstract class DataBaseController {
        #startSQLQuery():boolean
        #returnSQLQueryResults():boolean
    }

    class InternationalConferenceDataBaseController {
    }

    class VisaDataBaseController {
    }


    interface BookingPageable {
        startSearch():boolean
        startBooking():boolean
    }

    class BookingPage {
        +startSearch():boolean
        +startBooking():boolean
    }


    interface Maskable {
        listOfResultsInHTML(): results
    }

    abstract class Mask {
        #listOfResultsInHTML(): results
    }

    interface SearchInternationalConferenceMaskable {
        showSearchMask():SearchMask
        enterKeywords(x):boolean
        startSearchForKeywords(x):boolean
    }

    class SearchInternationalConferenceMask {
        #showSearchMask():SearchMask
        #enterKeywords(x):boolean
        #startSearchForKeywords(x):boolean
    }

    interface BookInternationalConferenceMaskable {
        showBookingMask(): BookingMask
        enterCredentials(x):boolean
        startBookingProcess(x):boolean
    }

    class BookInternationalConferenceMask {
        #showBookingMask(): BookingMask
        #enterCredentials(x):boolean
        #startBookingProcess(x):boolean
    }


    class InternationalConferenceList {
    }

    class VisaInfo {
    }


    interface DataBaseable {
        sqlQuery():boolean
    }

    abstract class DataBase {
        #sqlQuery():boolean
    }

    class InternationalConferenceDataBase {
    }

    class VisaDataBase {
    }


    memby <<entity>>
    BookingPageControllable <<interface>>
    ConferenceControllable <<interface>>
    SearchInternationalConferenceControllable <<interface>>
    BookInternationalConferenceControllable <<interface>>
    DataBaseControllable <<interface>>
    BookingPageable <<interface>>
    Maskable <<interface>>
    SearchInternationalConferenceMaskable <<interface>>
    BookInternationalConferenceMaskable <<interface>>
    DataBaseable <<interface>>
    ConferenceController <<abstract>>
    DataBaseController <<abstract>>
    Mask <<abstract>>
    DataBase <<abstract>>


    BookingPageControllable <|.. BookingPageController
    ConferenceControllable <|.. ConferenceController
    SearchInternationalConferenceControllable <|.. SearchInternationalConferenceController
    BookInternationalConferenceControllable <|.. BookInternationalConferenceController
    BookingPageable <|.. BookingPage
    Maskable <|.. Mask
    SearchInternationalConferenceMaskable <|.. SearchInternationalConferenceMask
    BookInternationalConferenceMaskable <|.. BookInternationalConferenceMask
    DataBaseable <|.. DataBase
    DataBaseControllable <|.. DataBaseController
    Mask <|-- BookInternationalConferenceMask
    Mask <|-- SearchInternationalConferenceMask
    DataBase <|-- InternationalConferenceDataBase
    DataBase <|-- VisaDataBase
    DataBaseController <|-- InternationalConferenceDataBaseController
    DataBaseController <|-- VisaDataBaseController

}
@enduml